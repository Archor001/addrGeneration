<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hust.addrgeneration.dao.UserMapper">
    <insert id="register">
        insert into user (nid, username, phoneNumber, password, name, emailAddress, role, status)
        values (#{nid}, #{username}, #{phoneNumber}, #{password}, #{name}, #{emailAddress}, #{role}, #{status})
    </insert>

    <delete id="deleteUser" parameterType="String">
        delete from user where nid = #{userContent} or username = #{userContent}
    </delete>

    <update id="updateUser" parameterType="com.hust.addrgeneration.beans.User">
        update user set nid = #{nid}, name = #{name}, password = #{password}, phoneNumber = #{phoneNumber}, role = #{role}, emailAddress = #{emailAddress} where username = #{username}
    </update>

    <select id="getUser" parameterType="String" resultType="com.hust.addrgeneration.beans.User">
        select * from user where nid = #{nid}
    </select>

    <select id="getPasswordFromNID" parameterType="String" resultType="String">
        select password from user where nid = #{nid}
    </select>

    <insert id="updateKey" parameterType="com.hust.addrgeneration.beans.KeyInfo">
        insert into keyinfo (addrGenIP, ideakey, timehash)
        values (#{addrGenIP}, #{ideaKey}, #{timeHash})
    </insert>
    
    <select id="getIdeaKey" parameterType="String" resultType="String">
        select ideakey from keyinfo where addrGenIP = #{addrGenIP} and timehash = #{timeHash}
    </select>

    <insert id="updateAID">
        insert into aidinfo (aidnth, prefix, aid, nid, registerTime, address, status)
        values (#{aidnth}, #{prefix}, #{aid}, #{nid}, #{registerTime}, #{address}, #{status})
    </insert>

    <select id="getAddress" parameterType="String" resultType="com.hust.addrgeneration.beans.Address">
        select address, registerTime from aidinfo where nid = #{nid}
    </select>

    <select id="getAIDnTHPrefix" parameterType="String" resultType="String">
        select prefix from aidinfo where aidnth = #{aidnth}
    </select>

    <select id="getAIDnTH" parameterType="String" resultType="String">
        select aidnth from aidinfo where aid = #{aid}
    </select>

    <select id="getAID" parameterType="String" resultType="String">
        select aid from aidinfo where nid = #{nid}
    </select>

    <delete id="deleteAID" parameterType="String">
        delete from aidinfo where aid = #{aid}
    </delete>

    <select id="getUsersByFilter" resultType="com.hust.addrgeneration.beans.User">
        select * from user where username LIKE CONCAT('%',#{content},'%') OR name LIKE CONCAT('%',#{content},'%') LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="getUserCountByFilter" parameterType="String" resultType="int">
        select COUNT(*) from user where username LIKE CONCAT('%',#{content},'%') OR name LIKE CONCAT('%',#{content},'%')
    </select>

    <select id="getAddressesByFilter" resultType="com.hust.addrgeneration.beans.Address">
        select user.username, user.name, user.nid, aidinfo.address, aidinfo.registerTime, aidinfo.status from user left join aidinfo on user.nid = aidinfo.nid
        where username LIKE CONCAT('%',#{content},'%') OR name LIKE CONCAT('%',#{content},'%') LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="getAddressCountByFilter" parameterType="String" resultType="int">
        select COUNT(*) from user left join aidinfo on user.nid = aidinfo.nid
        where username LIKE CONCAT('%',#{content},'%') OR name LIKE CONCAT('%',#{content},'%')
    </select>

</mapper>